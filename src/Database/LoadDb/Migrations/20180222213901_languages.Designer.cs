// <auto-generated />
using LoadDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace LoadDb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180222213901_languages")]
    partial class languages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Govmeeting.Backend.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int?>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.GovernmentBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("County");

                    b.Property<string>("Municipality");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("GovernmentBodies");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GovernmentBodyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentBodyId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int>("GovernmentBodyId");

                    b.Property<int>("Length");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentBodyId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Speaker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Speakers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Speaker");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Talk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Sequence");

                    b.Property<int>("SpeakerId");

                    b.Property<string>("Text");

                    b.Property<int>("TopicDiscussionId");

                    b.HasKey("Id");

                    b.HasIndex("SpeakerId");

                    b.HasIndex("TopicDiscussionId");

                    b.ToTable("Talks");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GovernmentBodyId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("GovernmentBodyId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.TopicDiscussion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MeetingId");

                    b.Property<int>("Sequence");

                    b.Property<int?>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicDiscussions");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Citizen", b =>
                {
                    b.HasBaseType("Govmeeting.Backend.Model.Speaker");


                    b.ToTable("Citizen");

                    b.HasDiscriminator().HasValue("Citizen");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Representative", b =>
                {
                    b.HasBaseType("Govmeeting.Backend.Model.Speaker");

                    b.Property<int>("GovernmentBodyId");

                    b.Property<string>("Identifier");

                    b.ToTable("Representative");

                    b.HasDiscriminator().HasValue("Representative");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Category", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.Topic")
                        .WithMany("Categories")
                        .HasForeignKey("TopicId");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Language", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.GovernmentBody")
                        .WithMany("Languages")
                        .HasForeignKey("GovernmentBodyId");
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Meeting", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.GovernmentBody")
                        .WithMany("Meetings")
                        .HasForeignKey("GovernmentBodyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Talk", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.Speaker", "Speaker")
                        .WithMany()
                        .HasForeignKey("SpeakerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Govmeeting.Backend.Model.TopicDiscussion")
                        .WithMany("Talks")
                        .HasForeignKey("TopicDiscussionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.Topic", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.GovernmentBody")
                        .WithMany("Topics")
                        .HasForeignKey("GovernmentBodyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Govmeeting.Backend.Model.TopicDiscussion", b =>
                {
                    b.HasOne("Govmeeting.Backend.Model.Meeting")
                        .WithMany("TopicDiscussions")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Govmeeting.Backend.Model.Topic", "Topic")
                        .WithMany("TopicDiscussions")
                        .HasForeignKey("TopicId");
                });
#pragma warning restore 612, 618
        }
    }
}
